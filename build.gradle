buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
		mysqlJdbcVersion = '5.1.42'
		domaVersion = "2.16.0"
	}
	repositories {
		mavenCentral()

	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

// doma gen config
configurations {
	domaGenRuntime
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

// DOMA setup
processResources.destinationDir = compileJava.destinationDir
// コンパイルより前にSQLファイルを出力先ディレクトリにコピーするために依存関係を逆転する
compileJava.dependsOn processResources


version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	// spring-boot managed
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile 'org.springframework.boot:spring-boot-starter-aop'

	// doma
	compile "org.seasar.doma:doma:${domaVersion}"
	compile 'org.seasar.doma.boot:doma-spring-boot-starter:1.1.0'

	// domaGen
	domaGenRuntime "org.seasar.doma:doma-gen:${domaVersion}"
	domaGenRuntime "mysql:mysql-connector-java:${mysqlJdbcVersion}"

	compile 'org.projectlombok:lombok:1.16.16'

	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

// --------------------------------

task domaGen << {
	def rootPackageName  = 'sample.doma'
	def dbUrl            = 'jdbc:mysql://0.0.0.0:3306/research'
	def dbUser           = 'root'
	def dbPassword       = 'password'

	ant.taskdef(resource: 'domagentask.properties',
			classpath: configurations.domaGenRuntime.asPath)
	// @see http://doma-gen.readthedocs.io/ja/stable/gen/
	ant.gen(
			url: dbUrl, user: dbUser, password: dbPassword,
			dialectName: 'mysql'
	) {
		entityConfig(packageName: "${rootPackageName}.entity")
		daoConfig(packageName: "${rootPackageName}.dao")
		sqlConfig()
	}
}
